{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/agree/ReactNative/tracksclient/src/screens/SigninScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, Input, Button } from 'react-native-elements';\nimport Spacer from \"../components/Spacers\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\n\nvar SigninScreen = function SigninScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state,\n      signIn = _useContext.signIn;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.containers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \" Sign in for Tracker Screen\")), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Email\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: email,\n    onChangeText: setEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Sign In\",\n    onPress: function onPress() {\n      return signIn(email, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Home Screen\",\n    onPress: function onPress() {\n      return navigation.navigate('mainFlow');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), React.createElement(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    h5: true,\n    style: styles.textStyle,\n    onPress: function onPress() {\n      return navigation.navigate('Singup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Don't Have Account, Create It .\")));\n};\n\nSigninScreen.navigationOptions = function () {\n  return {\n    headerShown: false\n  };\n};\n\nvar styles = StyleSheet.create({\n  containers: {\n    flex: 1,\n    marginTop: 50\n  },\n  textStyle: {\n    textAlign: 'center',\n    color: 'red',\n    fontSize: 18\n  }\n});\nexport default SigninScreen;","map":{"version":3,"sources":["/Users/agree/ReactNative/tracksclient/src/screens/SigninScreen.js"],"names":["React","useState","useContext","Text","Input","Button","Spacer","Context","AuthContext","SigninScreen","navigation","state","signIn","email","setEmail","password","setPassword","styles","containers","navigate","textStyle","navigationOptions","headerShown","StyleSheet","create","flex","marginTop","textAlign","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Input, Button } from 'react-native-elements';\nimport Spacer from '../components/Spacers';\nimport { Context as AuthContext } from '../context/AuthContext';\n\n\nconst SigninScreen = ({ navigation }) => {\n\n    const { state, signIn } = useContext(AuthContext);\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <View style={styles.containers}>\n            \n            <Spacer>\n                <Text h4 > Sign in for Tracker Screen</Text>\n            </Spacer>\n\n\n            <Spacer />\n\n            <Input\n                label=\"Email\"\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                value={email}\n                onChangeText={setEmail}\n            />\n\n            <Input\n                label=\"Password\"\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                secureTextEntry\n                value={password}\n                onChangeText={setPassword}\n            />\n\n            <Spacer>\n                <Button\n                    title=\"Sign In\"\n                    onPress={() => signIn(email, password)} />\n            </Spacer>\n\n            <Spacer>\n                <Button\n                    title=\"Home Screen\"\n                    onPress={() => navigation.navigate('mainFlow')} />\n            </Spacer>\n\n            <Spacer>\n                <Text h5\n                    style={styles.textStyle}\n                    onPress={() => navigation.navigate('Singup')}>\n                    Don't Have Account, Create It .</Text>\n            </Spacer>\n        </View>\n    );\n\n\n};\n\n\nSigninScreen.navigationOptions = () => {\n    return {\n        headerShown: false\n    };\n};\n\nconst styles = StyleSheet.create({\n    containers: {\n        flex: 1,\n        marginTop: 50\n    },\n\n    textStyle: {\n        textAlign: 'center',\n        color: 'red',\n        fontSize: 18\n    }\n});\n\nexport default SigninScreen;\n\n\n"]},"metadata":{},"sourceType":"module"}